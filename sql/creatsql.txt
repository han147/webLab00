CREATE table student(
	student_id	int,
	name		varchar(10),
	year		int default 1,
	dept_no		int,
	major		varchar(20)	not null,
	primary key(student_id)
);

CREATE table department(
	dept_no		int	not null	AUTO_INCREMENT,
	dept_name	varchar(20)	not NULL 	unique,
	office 		varchar(20)	nou null,
	office_tel	varchar(13),
	primary key(dept_no)
);



ALTER TABLE student CHANGE COLUMN major major VARCHAR(40);
ALTER TABLE student ADD COLUMN gender VARCHAR(10);
ALTER TABLE department CHANGE COLUMN dept_name dept_name VARCHAR(40) NOT NULL;
ALTER TABLE department CHANGE COLUMN office office VARCHAR(30) NOT NULL;

INSERT INTO student(student_id, name, year, dept_no, major) VALUES (20070002, 'James Bond', 3, 4, 'Business Administration'), (20060001, 'Queenie', 4, 4, 'Business Administration'), (20030001, 'Reonardo', 4, 2, 'Electronic Engineering'), (20040003, 'Julia', 3, 2, 'Electronic Engineering'), (20060002, 'Roosevelt', 3, 1, 'Computer Science'), (20100002, 'Fearne', 3, 4, 'Business Administration'), (20110001, 'Chloe', 2, 1, 'Computer Science'), (20080003, 'Amy', 4, 3, 'Law'), (20040002, 'Selina', 4, 5, 'English Literature'), (20070001, 'Ellen', 4, 4, 'Business Administration'), (20100001, 'Kathy', 3, 4, 'Business Administration'), (20110002, 'Lucy', 2, 2, 'Electronic Engineering'), (20030002, 'Michelle', 5, 1, 'Computer Science'), (20070003, 'April', 4, 3, 'Law'), (20070005, 'Alicia', 2, 5, 'English Literature'), (20100003, 'Yullia', 3, 1, 'Computer Science'), (20070007, 'Ashlee', 2, 4, 'Business Administration');

INSERT INTO department(dept_name, office, office_tel) VALUES ('Computer Science', 'Engineering building', '02-3290-0123'), ('Electronic Engineering', 'Engineering building', '02-3290-2345'), ('Law', 'Law building', '02-3290-7896'), ( 'Business Administration', 'Administration building', '02-3290-1112'), ('English Literature', 'Literature building', '02-3290-4412');




UPDATE department 
SET dept_name='Electronic and Electrical Engineering' 
WHERE dept_name ='Electronic engineering';

INSERT into department(dept_name, office, office_tel) VALUES ('Education', 'Education Building', '02-3290-2347');

UPDATE student 
SET dept_no = 6, major = 'Education' 
WHERE name = 'Chloe';

DELETE from student where name = 'Michelle';

DELETE from student where name = 'Fearne';


SELECT * from student where major = 'Conputer Science';

SELECT student_id, year, major from student;

SELECT * from student where year ='3';

SELECT * from student where  year='1' or year='2';

SELECT * from student s join department d on s.dept_no= d.dept_no where major = 'Business Administration';



SELECT * from student where student_id like %2007%;

SELECT * from student order by student_id;

SELECT major from student group by major having avg(year)>3;

SELECT * from student where mahot = 'Business Administration' and student_id like %2007% LIMIT 2;



SELECT * FROM roles r JOIN movies m ON r.movie_id=m.id WHERE m.name='Pi';

SELECT first_name, last_name from actors a join roles on actor_id=a.id join movies m on movie_id=m.id where m.name='Pi';

SELECT first_name, last_name from actors a join roles r1 on r1.actor_id=a.id join roles r2 on r2.actor_id=a.id join movies m1 on m1.id=r1.movie_id join movies m2 on m2.id=r2.movie_id where m1.name='Kill Bill: Vol. 1' and m2.name='Kill Bill: Vol. 2';

SELECT first_name, last_name from actors join roles on actor_id=id group by id order by count(id) desc limit 7;

SELECT genre from movies_genres join movies on movie_id=id group by genre order by count(genre) desc limit 3;

SELECT first_name, last_name from directors join movies_directors md on id=md.director_id join movies_genres mg on mg.movie_id=md.movie_id where mg.genre='Thriller' group by first_name, last_name order by count(mg.genre) desc limit 1;



SELECT grade from grades join courses on course_id=id where name='Computer Science 143';

SELECT s.name, grade from students s join grades on student_id=s.id join courses c on course_id=c.id where c.name='Computer Science 143' and grade <= 'B-';

SELECT s.name from students s join grades on student_id=s.id where grade <= 'B-';

SELECT c.name from courses c join grades g on g.course_id=c.id join students s on s.id=g.student_id group by c.name having count(c.name) >= 2;